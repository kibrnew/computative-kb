def iinp(): return int(input())
def linp():return list(map(int, input().split())) 
def digit():return [int(i) for i in (list(input()))]
def char():return list(input())
def lsinp():return input().split()
from collections import defaultdict

def solve():
    number=iinp()
    l=linp()
    temp=defaultdict(list)
    for i in range(len(l)):
        temp[l[i]].append(i)
    def mirror(l):
        new=[]
        for i in range(len(l)):
            ind=(i+1)%(len(l))
            new.append(l[ind])
        return new
    ans=[0]*len(l)
    for i in temp.keys():
        if len(temp[i])==1:
            print(-1)
            return
        m=mirror(temp[i])
        for j in range(len(temp[i])):
            ans[temp[i][j]]=m[j]
    for i in range(len(ans)):
        ans[i]+=1
    print(*ans)

q=iinp()
for _ in range(q):
    solve()
